syntax = "proto3";

package api.note_v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/arpushkarev/note-service-api/pkg/note";

service NoteV1 {
  rpc Create (CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/note/v1/create"
      body: "*"
    };
  }

  rpc Get (GetRequest) returns (GetResponse){
    option (google.api.http) = {
      get: "/note/v1/get"
    };
  }

  rpc GetAll (Empty) returns (GetAllResponse){
    option (google.api.http) = {
      get: "/note/v1/get_all"
    };
  }

  rpc Update (UpdateRequest) returns (Empty){
    option (google.api.http) = {
      put: "/note/v1/update"
      body: "*"
    };
  }

  rpc Delete (DeleteRequest) returns (Empty){
    option (google.api.http) = {
      delete: "/note/v1/delete"
    };
  };
}

message NoteInfo {
  string title = 1 [(validate.rules).string = {pattern: "(?i)^[A-Za-z]+$", max_bytes: 32}];
  string text = 2 [(validate.rules).string.not_contains = "бля"];
  string author = 3;
}

message Note {
  int64 id = 1;
  NoteInfo note = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message UpdateNoteInfo {
  google.protobuf.StringValue title = 1 [(validate.rules).string = {pattern: "(?i)^[A-Za-z]+$",max_bytes: 32}];
  google.protobuf.StringValue text = 2 [(validate.rules).string.not_contains = "сука"];
  google.protobuf.StringValue author = 3;
}

message Empty {

}

message CreateRequest {
  NoteInfo note = 1;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

message GetResponse {
  Note note = 1;
}

message GetAllResponse {
  repeated Note notes = 1;
}

message UpdateRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
  UpdateNoteInfo note = 2;
}

message DeleteRequest {
  int64 id = 1 [(validate.rules).int64.gt = 0];
}

